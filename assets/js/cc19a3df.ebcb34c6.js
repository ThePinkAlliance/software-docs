"use strict";(self.webpackChunktooling_docs=self.webpackChunktooling_docs||[]).push([[850],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},66421:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),c=["components"],i={},s=void 0,l={unversionedId:"core/PathFactory",id:"core/PathFactory",title:"PathFactory",description:"Path factory handles building pathweaver controllers for swerve drive this makes command specific controller changes easier.",source:"@site/docs/core/PathFactory.md",sourceDirName:"core",slug:"/core/PathFactory",permalink:"/software-docs/docs/core/PathFactory",draft:!1,editUrl:"https://github.com/thePinkAlliance/software-docs/tree/main/docs/core/PathFactory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Limelight",permalink:"/software-docs/docs/core/Limelight"},next:{title:"TargetPackage",permalink:"/software-docs/docs/core/TargetPackage"}},p={},u=[{value:"Creating new Instance",id:"creating-new-instance",level:3}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Path factory handles building pathweaver controllers for swerve drive this makes command specific controller changes easier."),(0,o.kt)("h3",{id:"creating-new-instance"},"Creating new Instance"),(0,o.kt)("p",null,"Here we are creating a new Path Factory instance passing it the required parameters like Kinematics, consumer to update the pod states and x,y and theta gains along with maxVelocityMetersPerSecond, maxAccelerationMetersPerSecond."),(0,o.kt)("p",null,"First let's start with the kinmatics parameter what we are passing is WPIlib's ",(0,o.kt)("a",{parentName:"p",href:"https://docs.wpilib.org/en/stable/docs/software/kinematics-and-odometry/swerve-drive-kinematics.html?highlight=Swerve%20Kinmatics"},"SwerveDriveKinematics")," class which is responsible for converting ",(0,o.kt)("a",{parentName:"p",href:"https://docs.wpilib.org/en/stable/docs/software/kinematics-and-odometry/intro-and-chassis-speeds.html?highlight=ChassisSpeeds#constructing-a-chassisspeeds-object"},"ChassisSpeeds")," class which store's velocity values in x, y and theta to a SwerveModuleState array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"PathFactory m_pathFactory = new PathFactory(m_kinmatics, \n    (state) -> m_base.setStates(state), x_gains, \n    y_gains, theta_gains, \n    maxVelocityMetersPerSecond, maxAccelerationMetersPerSecond);\n")))}m.isMDXComponent=!0}}]);